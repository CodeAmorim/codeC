#include <stdio.h>
#include <stdlib.h>

//desenvolver uma função para remover determinado elemento da lista
//criar uma função para inserir ordenadamente

typedef
struct c {
	int valor;
	struct c* prox;
}circular;


circular* add(circular* p, int valor){
	circular *novo = (circular*)malloc(sizeof(circular));
	novo->valor = valor;
	if(p == NULL){
		novo->prox = novo;
		return novo;
	}
	
	circular *aux = p;
	while(aux->prox != p) aux = aux->prox;
	aux->prox = novo;
	novo->prox = p;
	
	return p;
}

void mostrar(circular* p){
	circular * aux = p;
	if(p == NULL){
		printf("Lista vazia!");
		return;
	}
	
	do{
		printf("%d ->", aux->valor);
		aux = aux->prox;
	}while(aux != p);
}

circular* remover(circular* inicio, int valor){
	
	if(inicio == NULL){
		printf("Lista vazia!");
		return NULL;
	}
	
	
    circular* aux = inicio;
    
    if(aux->valor == valor){
    	circular* ultimo = inicio;
    	while(ultimo->prox != inicio){
    		ultimo = ultimo->prox;
		}
		ultimo->prox = inicio->prox;
		circular *removido = inicio;
		inicio = inicio->prox;
		free(removido);
		return inicio;
	}
    
    while(aux->prox != inicio){
    	if(aux->prox->valor == valor){
    		circular *limpar = aux->prox;
    		aux->prox = limpar->prox;
    		free(limpar);
		}
		aux = aux->prox;
	}
	
	return inicio;
}

/*
circular* inserirOrdenar(circular* p, int valor){		
}
*/
int main(){
	circular* p = NULL;
	int opc = 0;	
	
	do{
	
		system("cls");
		
		printf("Digite sua opcao:\n");
		printf("1 - Inserir um novo valor\n");
		printf("2 - Mostrar lista \n");
		printf("3 - Remover um valor \n");
		printf("0 - Sair \n");
		scanf("%d", &opc);
		switch(opc){
			case 1:{
				circular* novo;
				int valor;
				printf("Digite um valor:");
				scanf("%d", &valor);
				p = add(p, valor);
				break;
			}
			case 2:{
				mostrar(p);
				getch();
				break;
			}
			case 3:{
				int valor;
				printf("Digite um valor:");
				scanf("%d", &valor);
				p = remover(p, valor);
				break;
			}
			case 0:
				printf("Saindo...");
				break;
			default:
				printf("Opcao invalida!");
				getch();
		}
	}while(opc != 0);
	return 0;
}
